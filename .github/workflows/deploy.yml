name: Deploy Qalia UI to DigitalOcean

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Debug secrets
      run: |
        echo "DO_HOST exists: ${{ secrets.DO_HOST != '' }}"
        echo "DO_USERNAME exists: ${{ secrets.DO_USERNAME != '' }}"
        echo "DO_SSH_KEY exists: ${{ secrets.DO_SSH_KEY != '' }}"
        
    - name: Deploy Qalia UI to DigitalOcean
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DO_HOST }}
        username: ${{ secrets.DO_USERNAME }}
        key: ${{ secrets.DO_SSH_KEY }}
        script: |
          # Navigate to application directory
          cd /opt/qalia || {
            echo "Creating application directory..."
            mkdir -p /opt/qalia
            cd /opt/qalia
            git clone https://github.com/${{ github.repository }} .
          }
          
          # Pull latest changes
          echo "Pulling latest code..."
          git fetch origin
          git reset --hard origin/${{ github.ref_name }}
          
          # Run server setup script to ensure all dependencies are installed
          echo "Running server setup script..."
          bash deployment/setup-server.sh
          
          # Navigate to UI directory
          echo "Navigating to UI directory..."
          cd ui
          
          # Stop existing containers
          echo "Stopping existing containers..."
          docker-compose down || true
          
          # Build and start the UI container
          echo "Building and starting Qalia UI container..."
          docker-compose up --build -d
          
          # Wait for container to be healthy
          echo "Waiting for container to start..."
          sleep 15
          
          # Check container status
          echo "📋 Container Status:"
          docker-compose ps
          
          echo "📋 Container Logs:"
          docker-compose logs --tail=20
          
          # Verify the application is responding
          echo "🔍 Testing application endpoints..."
          curl -f http://localhost:8000/health || echo "❌ Health check failed"
          
          # Update systemd service to manage Docker container
          echo "Updating systemd service for Docker container..."
          cat > /etc/systemd/system/qalia-ui.service << 'EOF'
          [Unit]
          Description=Qalia UI Docker Container
          After=docker.service
          Requires=docker.service
          
          [Service]
          Type=oneshot
          RemainAfterExit=yes
          WorkingDirectory=/opt/qalia/ui
          ExecStart=/usr/bin/docker-compose up -d
          ExecStop=/usr/bin/docker-compose down
          Restart=no
          
          [Install]
          WantedBy=multi-user.target
          EOF
          
          # Stop old Python service if it exists
          systemctl stop qalia || true
          systemctl disable qalia || true
          
          # Enable and start new Docker service
          systemctl daemon-reload
          systemctl enable qalia-ui
          systemctl start qalia-ui
          systemctl status qalia-ui --no-pager
          
          # Final verification
          echo "🔍 Final verification..."
          echo "Testing local application (port 8000):"
          curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/health || echo "❌ Local health check failed"
          
          echo "Testing nginx proxy (port 80):"
          curl -s -o /dev/null -w "%{http_code}" http://localhost/health || echo "❌ Nginx proxy health check failed"
          
          echo "✅ Deployment completed successfully!"

    - name: Health Check
      run: |
        echo "Waiting for service to start..."
        sleep 20
        curl -f http://${{ secrets.DO_HOST }}/health || echo "Health check failed - service may still be starting"
        curl -f http://${{ secrets.DO_HOST }}/api/auth/user || echo "Auth API check failed - service may still be starting" 